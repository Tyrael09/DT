$date
	Sat Dec 16 20:41:54 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module shifter_tb $end
$var wire 8 ! out [7:0] $end
$var reg 1 " ERROR $end
$var reg 4 # in [3:0] $end
$var reg 2 $ s [1:0] $end
$scope module uut $end
$var wire 4 % in [3:0] $end
$var wire 2 & s [1:0] $end
$var wire 8 ' out [7:0] $end
$scope module mux2 $end
$var wire 8 ( m0 [7:0] $end
$var wire 8 ) m1 [7:0] $end
$var wire 8 * m2 [7:0] $end
$var wire 8 + m3 [7:0] $end
$var wire 2 , s [1:0] $end
$var reg 8 - out [7:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 . i [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 / j [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b0 !
$end
#1
b1 $
b1 &
b1 ,
b1 /
#2
b10 $
b10 &
b10 ,
b10 /
#3
b11 $
b11 &
b11 ,
b11 /
#4
b1 !
b1 '
b1 -
b0 $
b0 &
b0 ,
b1 (
b10 )
b100 *
b1000 +
b1 #
b1 %
b1 .
b0 /
#5
b10 !
b10 '
b10 -
b1 $
b1 &
b1 ,
b1 /
#6
b100 !
b100 '
b100 -
b10 $
b10 &
b10 ,
b10 /
#7
b1000 !
b1000 '
b1000 -
b11 $
b11 &
b11 ,
b11 /
#8
b10 !
b10 '
b10 -
b0 $
b0 &
b0 ,
b10 (
b100 )
b1000 *
b10000 +
b10 #
b10 %
b10 .
b0 /
#9
b100 !
b100 '
b100 -
b1 $
b1 &
b1 ,
b1 /
#10
b1000 !
b1000 '
b1000 -
b10 $
b10 &
b10 ,
b10 /
#11
b10000 !
b10000 '
b10000 -
b11 $
b11 &
b11 ,
b11 /
#12
b11 !
b11 '
b11 -
b0 $
b0 &
b0 ,
b11 (
b110 )
b1100 *
b11000 +
b11 #
b11 %
b11 .
b0 /
#13
b110 !
b110 '
b110 -
b1 $
b1 &
b1 ,
b1 /
#14
b1100 !
b1100 '
b1100 -
b10 $
b10 &
b10 ,
b10 /
#15
b11000 !
b11000 '
b11000 -
b11 $
b11 &
b11 ,
b11 /
#16
b100 !
b100 '
b100 -
b0 $
b0 &
b0 ,
b100 (
b1000 )
b10000 *
b100000 +
b100 #
b100 %
b100 .
b0 /
#17
b1000 !
b1000 '
b1000 -
b1 $
b1 &
b1 ,
b1 /
#18
b10000 !
b10000 '
b10000 -
b10 $
b10 &
b10 ,
b10 /
#19
b100000 !
b100000 '
b100000 -
b11 $
b11 &
b11 ,
b11 /
#20
b101 !
b101 '
b101 -
b0 $
b0 &
b0 ,
b101 (
b1010 )
b10100 *
b101000 +
b101 #
b101 %
b101 .
b0 /
#21
b1010 !
b1010 '
b1010 -
b1 $
b1 &
b1 ,
b1 /
#22
b10100 !
b10100 '
b10100 -
b10 $
b10 &
b10 ,
b10 /
#23
b101000 !
b101000 '
b101000 -
b11 $
b11 &
b11 ,
b11 /
#24
b110 !
b110 '
b110 -
b0 $
b0 &
b0 ,
b110 (
b1100 )
b11000 *
b110000 +
b110 #
b110 %
b110 .
b0 /
#25
b1100 !
b1100 '
b1100 -
b1 $
b1 &
b1 ,
b1 /
#26
b11000 !
b11000 '
b11000 -
b10 $
b10 &
b10 ,
b10 /
#27
b110000 !
b110000 '
b110000 -
b11 $
b11 &
b11 ,
b11 /
#28
b111 !
b111 '
b111 -
b0 $
b0 &
b0 ,
b111 (
b1110 )
b11100 *
b111000 +
b111 #
b111 %
b111 .
b0 /
#29
b1110 !
b1110 '
b1110 -
b1 $
b1 &
b1 ,
b1 /
#30
b11100 !
b11100 '
b11100 -
b10 $
b10 &
b10 ,
b10 /
#31
b111000 !
b111000 '
b111000 -
b11 $
b11 &
b11 ,
b11 /
#32
b1000 !
b1000 '
b1000 -
b0 $
b0 &
b0 ,
b1000 (
b10000 )
b100000 *
b1000000 +
b1000 #
b1000 %
b1000 .
b0 /
#33
b10000 !
b10000 '
b10000 -
b1 $
b1 &
b1 ,
b1 /
#34
b100000 !
b100000 '
b100000 -
b10 $
b10 &
b10 ,
b10 /
#35
b1000000 !
b1000000 '
b1000000 -
b11 $
b11 &
b11 ,
b11 /
#36
b1001 !
b1001 '
b1001 -
b0 $
b0 &
b0 ,
b1001 (
b10010 )
b100100 *
b1001000 +
b1001 #
b1001 %
b1001 .
b0 /
#37
b10010 !
b10010 '
b10010 -
b1 $
b1 &
b1 ,
b1 /
#38
b100100 !
b100100 '
b100100 -
b10 $
b10 &
b10 ,
b10 /
#39
b1001000 !
b1001000 '
b1001000 -
b11 $
b11 &
b11 ,
b11 /
#40
b1010 !
b1010 '
b1010 -
b0 $
b0 &
b0 ,
b1010 (
b10100 )
b101000 *
b1010000 +
b1010 #
b1010 %
b1010 .
b0 /
#41
b10100 !
b10100 '
b10100 -
b1 $
b1 &
b1 ,
b1 /
#42
b101000 !
b101000 '
b101000 -
b10 $
b10 &
b10 ,
b10 /
#43
b1010000 !
b1010000 '
b1010000 -
b11 $
b11 &
b11 ,
b11 /
#44
b1011 !
b1011 '
b1011 -
b0 $
b0 &
b0 ,
b1011 (
b10110 )
b101100 *
b1011000 +
b1011 #
b1011 %
b1011 .
b0 /
#45
b10110 !
b10110 '
b10110 -
b1 $
b1 &
b1 ,
b1 /
#46
b101100 !
b101100 '
b101100 -
b10 $
b10 &
b10 ,
b10 /
#47
b1011000 !
b1011000 '
b1011000 -
b11 $
b11 &
b11 ,
b11 /
#48
b1100 !
b1100 '
b1100 -
b0 $
b0 &
b0 ,
b1100 (
b11000 )
b110000 *
b1100000 +
b1100 #
b1100 %
b1100 .
b0 /
#49
b11000 !
b11000 '
b11000 -
b1 $
b1 &
b1 ,
b1 /
#50
b110000 !
b110000 '
b110000 -
b10 $
b10 &
b10 ,
b10 /
#51
b1100000 !
b1100000 '
b1100000 -
b11 $
b11 &
b11 ,
b11 /
#52
b1101 !
b1101 '
b1101 -
b0 $
b0 &
b0 ,
b1101 (
b11010 )
b110100 *
b1101000 +
b1101 #
b1101 %
b1101 .
b0 /
#53
b11010 !
b11010 '
b11010 -
b1 $
b1 &
b1 ,
b1 /
#54
b110100 !
b110100 '
b110100 -
b10 $
b10 &
b10 ,
b10 /
#55
b1101000 !
b1101000 '
b1101000 -
b11 $
b11 &
b11 ,
b11 /
#56
b1110 !
b1110 '
b1110 -
b0 $
b0 &
b0 ,
b1110 (
b11100 )
b111000 *
b1110000 +
b1110 #
b1110 %
b1110 .
b0 /
#57
b11100 !
b11100 '
b11100 -
b1 $
b1 &
b1 ,
b1 /
#58
b111000 !
b111000 '
b111000 -
b10 $
b10 &
b10 ,
b10 /
#59
b1110000 !
b1110000 '
b1110000 -
b11 $
b11 &
b11 ,
b11 /
#60
b1111 !
b1111 '
b1111 -
b0 $
b0 &
b0 ,
b1111 (
b11110 )
b111100 *
b1111000 +
b1111 #
b1111 %
b1111 .
b0 /
#61
b11110 !
b11110 '
b11110 -
b1 $
b1 &
b1 ,
b1 /
#62
b111100 !
b111100 '
b111100 -
b10 $
b10 &
b10 ,
b10 /
#63
b1111000 !
b1111000 '
b1111000 -
b11 $
b11 &
b11 ,
b11 /
#64
b10000 .
b100 /
